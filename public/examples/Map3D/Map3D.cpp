/*
**  File        : drawMap3d.cpp
**  Authors		:
**  Created on	:
**  Modified on :
**  Description :
*/
#include "lib_common\interface.h"
#include "lib_map3d\lib_map3d.h"
#include "lib_common\render.h"

void drawMap3d(void)
{
	/*создание объекта класса TRender дл€ формировани€ изображени€ в OpenGL*/
	static _CMN::TRender render;
	/*инициализаци€ шрифтов*/
	render.initFonts("./files/fonts/");
	/*создание объекта класса TInParams дл€ задани€ параметров отрисовки карты*/
	LibMap3d::TInParams par_3d;
	/*передача ссылки на созданный объект класса TRender в parMap2d*/
	par_3d.pRender = &render;
	/*задание пути до файлов базы данных*/
	par_3d.pchBD_Path = "D:/documentation/Proj_cpp/kai50/BSF";
	/*задание пути до необходимых файлов: текстур, шрифтов, DAT файлов.*/
	par_3d.pchFilesPath = "./files";
	/*устанавливаютс€ серые цвета карты от 0 до 100*/
	par_3d.graysc_perc = 0;
	/*устанавливаетс€ €ркость карты от 0 до 100*/
	par_3d.bright_perc = 100;
	/*задание высоты окна просмотра в пиксел€х*/
	par_3d.width = 1000;
	/*задание ширины окна просмотра в пиксел€х*/
	par_3d.height = 1000;
	/*задание угла камеры по оси х (сколько пространства захватывает камера)*/
	par_3d.fovX_deg = 80;
	/*задание широты летательного аппарата в градусах*/
	par_3d.geoVw_deg.fi = 40;
	/*задание долготы летательного аппарата в градусах*/
	par_3d.geoVw_deg.lm = 40;
	/*задание высоты летательного аппарата в метраз*/
	par_3d.htVw_m = 11000;
	/*задание крена летательного аппарата в градусах*/
	par_3d.angVw_deg.gam = 0;
	/*задание курса летательного аппарата в градусах*/
	par_3d.angVw_deg.psi = 0;
	/*задание тангажа летательного аппарата в градусах*/
	par_3d.angVw_deg.tet = 0;
	/*задание поворота координатных осей экрана*/
	par_3d.rotation_deg = 0;
	/*установка канала отрисовки*/
	LibMap3d::setChannel(LibMap3d::Channel_1);



	/*вызов функции дл€ отрисовки карты*/
	LibMap3d::main3D(par_3d);
}


///*количество промежуточных пунктов маршрута*/
//float size = 2;
///*установка количества промежуточных пунктов маршрута*/
//LibMap3d::resizeRoute(size);
///*координаты первого промежуточного пункта маршрута*/
//_CMN::TGeo2d pos1(40.001, 40.001);
///*координаты второго промежуточного пункта маршрута*/
//_CMN::TGeo2d pos2(40.003, 40.003);
///*высота дл€ промежуточных пунктов маршрута*/
//float h = 11000;
///*задание первого промежуточного пункта маршрута*/
//LibMap3d::addPpmToRoute(pos1, h);
///*задание второго промежуточного пункта маршрута*/
//LibMap3d::addPpmToRoute(pos2, h);
